identical(x,x1)
id_to_text1 <- function(data=data,id_to_text=T) {
if (id_to_text == TRUE) {
col_names <- colnames(data)
names_list <- names(aoe2dotnetapi::lobby_translation)
n_values <- length(names_list)
for (i in 1:n_values) {
data <- merge(aoe2dotnetapi::lobby_translation[[i]], data, by.x ="id", by.y = names_list[i])
colnames(data)[colnames(data)=="string"] <- names_list[i]
data["id"] <- NULL
data <- data[,col_names]
}
for (i in 1:nrow(data)) {
data$players[[i]] <- merge(aoe2dotnetapi::match_translation, data$players[[i]], by.x="id", by.y="civ")
colnames(data$players[[i]])[2] <- "civ"
}
data
}
else {
data
}
}
x1 <- id_to_text1(data=y)
View(x1)
id_to_text1 <- function(data=data,id_to_text=T) {
if (id_to_text == TRUE) {
col_names <- colnames(data)
names_list <- names(aoe2dotnetapi::lobby_translation)
n_values <- length(names_list)
for (i in 1:n_values) {
data <- merge(aoe2dotnetapi::lobby_translation[[i]], data, by.x ="id", by.y = names_list[i])
colnames(data)[colnames(data)=="string"] <- names_list[i]
data["id"] <- NULL
data <- data[,col_names]
}
col_names <- colnames(data$players)
for (i in 1:nrow(data)) {
data$players[[i]] <- merge(aoe2dotnetapi::match_translation, data$players[[i]], by.x="id", by.y="civ")
colnames(data$players[[i]])[2] <- "civ"
data$players["id"] <- NULL
data$players <- data$players[,col_names]
}
data
}
else {
data
}
}
x1 <- id_to_text1(data=y)
x1 <- id_to_text1(data=y)
View(x1[[41]][[1]])
View(y)
View(y[[41]][[1]])
id_to_text1 <- function(data=data,id_to_text=T) {
if (id_to_text == TRUE) {
col_names <- colnames(data)
names_list <- names(aoe2dotnetapi::lobby_translation)
n_values <- length(names_list)
print(col_names)
for (i in 1:n_values) {
data <- merge(aoe2dotnetapi::lobby_translation[[i]], data, by.x ="id", by.y = names_list[i])
colnames(data)[colnames(data)=="string"] <- names_list[i]
data["id"] <- NULL
data <- data[,col_names]
}
col_names <- colnames(data$players)
print(col_names)
for (i in 1:nrow(data)) {
data$players[[i]] <- merge(aoe2dotnetapi::match_translation, data$players[[i]], by.x="id", by.y="civ")
colnames(data$players[[i]])[2] <- "civ"
data$players["id"] <- NULL
data$players <- data$players[,col_names]
}
data
}
else {
data
}
}
x1 <- id_to_text1(data=y)
id_to_text1 <- function(data=data,id_to_text=T) {
if (id_to_text == TRUE) {
col_names <- colnames(data)
names_list <- names(aoe2dotnetapi::lobby_translation)
n_values <- length(names_list)
print(col_names)
for (i in 1:n_values) {
data <- merge(aoe2dotnetapi::lobby_translation[[i]], data, by.x ="id", by.y = names_list[i])
colnames(data)[colnames(data)=="string"] <- names_list[i]
data["id"] <- NULL
data <- data[,col_names]
}
col_names <- colnames(data$players)
print(col_names)
for (i in 1:nrow(data)) {
data$players[[i]] <- merge(aoe2dotnetapi::match_translation, data$players[[i]], by.x="id", by.y="civ")
colnames(data$players[[i]])[2] <- "civ"
data$players["id"] <- NULL
#data$players <- data$players[,col_names]
}
data
}
else {
data
}
}
x1 <- id_to_text1(data=y)
colnames(y$players)
colnames(y$players[1])
colnames(y$players[[1]])
id_to_text1 <- function(data=data,id_to_text=T) {
if (id_to_text == TRUE) {
col_names <- colnames(data)
names_list <- names(aoe2dotnetapi::lobby_translation)
n_values <- length(names_list)
print(col_names)
for (i in 1:n_values) {
data <- merge(aoe2dotnetapi::lobby_translation[[i]], data, by.x ="id", by.y = names_list[i])
colnames(data)[colnames(data)=="string"] <- names_list[i]
data["id"] <- NULL
data <- data[,col_names]
}
col_names <- colnames(data$players[[1]])
print(col_names)
for (i in 1:nrow(data)) {
data$players[[i]] <- merge(aoe2dotnetapi::match_translation, data$players[[i]], by.x="id", by.y="civ")
colnames(data$players[[i]])[2] <- "civ"
data$players["id"] <- NULL
data$players <- data$players[,col_names]
}
data
}
else {
data
}
}
x1 <- id_to_text1(data=y)
id_to_text1 <- function(data=data,id_to_text=T) {
if (id_to_text == TRUE) {
col_names <- colnames(data)
names_list <- names(aoe2dotnetapi::lobby_translation)
n_values <- length(names_list)
print(col_names)
for (i in 1:n_values) {
data <- merge(aoe2dotnetapi::lobby_translation[[i]], data, by.x ="id", by.y = names_list[i])
colnames(data)[colnames(data)=="string"] <- names_list[i]
data["id"] <- NULL
data <- data[,col_names]
}
col_names <- colnames(data$players[[1]])
print(col_names)
for (i in 1:nrow(data)) {
data$players[[i]] <- merge(aoe2dotnetapi::match_translation, data$players[[i]], by.x="id", by.y="civ")
colnames(data$players[[i]])[2] <- "civ"
data$players["id"] <- NULL
data$players <- data$players[[col_names]]
}
data
}
else {
data
}
}
x1 <- id_to_text1(data=y)
id_to_text1 <- function(data=data,id_to_text=T) {
if (id_to_text == TRUE) {
col_names <- colnames(data)
names_list <- names(aoe2dotnetapi::lobby_translation)
n_values <- length(names_list)
print(col_names)
for (i in 1:n_values) {
data <- merge(aoe2dotnetapi::lobby_translation[[i]], data, by.x ="id", by.y = names_list[i])
colnames(data)[colnames(data)=="string"] <- names_list[i]
data["id"] <- NULL
data <- data[,col_names]
}
col_names <- colnames(data$players[[1]])
print(col_names)
for (i in 1:nrow(data)) {
data$players[[i]] <- merge(aoe2dotnetapi::match_translation, data$players[[i]], by.x="id", by.y="civ")
colnames(data$players[[i]])[2] <- "civ"
data$players["id"] <- NULL
data$players <- data$players[col_names]
}
data
}
else {
data
}
}
x1 <- id_to_text1(data=y)
id_to_text1 <- function(data=data,id_to_text=T) {
if (id_to_text == TRUE) {
col_names <- colnames(data)
names_list <- names(aoe2dotnetapi::lobby_translation)
n_values <- length(names_list)
print(col_names)
for (i in 1:n_values) {
data <- merge(aoe2dotnetapi::lobby_translation[[i]], data, by.x ="id", by.y = names_list[i])
colnames(data)[colnames(data)=="string"] <- names_list[i]
data["id"] <- NULL
data <- data[,col_names]
}
col_names <- colnames(data$players[[1]])
print(col_names)
for (i in 1:nrow(data)) {
data$players[[i]] <- merge(aoe2dotnetapi::match_translation, data$players[[i]], by.x="id", by.y="civ")
colnames(data$players[[i]])[2] <- "civ"
data$players["id"] <- NULL
data$players <- data$players[[1]][,col_names]
}
data
}
else {
data
}
}
x1 <- id_to_text1(data=y)
id_to_text1 <- function(data=data,id_to_text=T) {
if (id_to_text == TRUE) {
col_names <- colnames(data)
names_list <- names(aoe2dotnetapi::lobby_translation)
n_values <- length(names_list)
print(col_names)
for (i in 1:n_values) {
data <- merge(aoe2dotnetapi::lobby_translation[[i]], data, by.x ="id", by.y = names_list[i])
colnames(data)[colnames(data)=="string"] <- names_list[i]
data["id"] <- NULL
data <- data[,col_names]
}
col_names <- colnames(data$players[[1]])
print(col_names)
for (i in 1:nrow(data)) {
data$players[[i]] <- merge(aoe2dotnetapi::match_translation, data$players[[i]], by.x="id", by.y="civ")
colnames(data$players[[i]])[2] <- "civ"
data$players["id"] <- NULL
}
data
}
else {
data
}
}
x1 <- id_to_text1(data=y)
View(x1)
View(x1[[41]][[1]])
View(x1)
View(x1[[41]][[1]])
x1$players
x1$players[1]
x1$players[[1]]
x1$players[[1]][,"id"] <- NULL
View(x1)
id_to_text1 <- function(data=data,id_to_text=T) {
if (id_to_text == TRUE) {
col_names <- colnames(data)
names_list <- names(aoe2dotnetapi::lobby_translation)
n_values <- length(names_list)
print(col_names)
for (i in 1:n_values) {
data <- merge(aoe2dotnetapi::lobby_translation[[i]], data, by.x ="id", by.y = names_list[i])
colnames(data)[colnames(data)=="string"] <- names_list[i]
data["id"] <- NULL
data <- data[,col_names]
}
col_names <- colnames(data$players[[1]])
print(col_names)
for (i in 1:nrow(data)) {
data$players[[i]] <- merge(aoe2dotnetapi::match_translation, data$players[[i]], by.x="id", by.y="civ")
colnames(data$players[[i]])[2] <- "civ"
x1$players[[1]][,"id"] <- NULL
x1$players[[1]] <- x1$players[[1]][,col_names]
}
data
}
else {
data
}
}
x1 <- id_to_text1(data=y)
View(x1)
View(x1[[41]][[1]])
id_to_text1 <- function(data=data,id_to_text=T) {
if (id_to_text == TRUE) {
col_names <- colnames(data)
names_list <- names(aoe2dotnetapi::lobby_translation)
n_values <- length(names_list)
print(col_names)
for (i in 1:n_values) {
data <- merge(aoe2dotnetapi::lobby_translation[[i]], data, by.x ="id", by.y = names_list[i])
colnames(data)[colnames(data)=="string"] <- names_list[i]
data["id"] <- NULL
data <- data[,col_names]
}
col_names <- colnames(data$players[[1]])
print(col_names)
for (i in 1:nrow(data)) {
data$players[[i]] <- merge(aoe2dotnetapi::match_translation, data$players[[i]], by.x="id", by.y="civ")
colnames(data$players[[i]])[2] <- "civ"
x1$players[[1]][,"id"] <- NULL
x1$players[[1]][] <- x1$players[[1]][,col_names]
}
data
}
else {
data
}
}
x1 <- id_to_text1(data=y)
View(x1)
View(x1[[41]][[1]])
x1$players[[1]][,"id"] <- NULL
View(x1[[41]][[1]])
colnames(y$players[[1]])
x1$players[[1]] <- x1$players[[1]][,col_names]
col_names <- colnames(y$players[[1]])
x1$players[[1]] <- x1$players[[1]][,col_names]
View(x1)
View(x1[[41]][[1]])
id_to_text1 <- function(data=data,id_to_text=T) {
if (id_to_text == TRUE) {
col_names <- colnames(data)
names_list <- names(aoe2dotnetapi::lobby_translation)
n_values <- length(names_list)
print(col_names)
for (i in 1:n_values) {
data <- merge(aoe2dotnetapi::lobby_translation[[i]], data, by.x ="id", by.y = names_list[i])
colnames(data)[colnames(data)=="string"] <- names_list[i]
data["id"] <- NULL
data <- data[,col_names]
}
col_names <- colnames(data$players[[1]])
print(col_names)
for (i in 1:nrow(data)) {
data$players[[i]] <- merge(aoe2dotnetapi::match_translation, data$players[[i]], by.x="id", by.y="civ")
colnames(data$players[[i]])[2] <- "civ"
data$players[[1]][,"id"] <- NULL
data$players[[1]] <- data$players[[1]][,col_names]
}
data
}
else {
data
}
}
x1 <- id_to_text1(data=y)
View(x1)
View(x1[[41]][[1]])
id_to_text1 <- function(data=data,id_to_text=T) {
if (id_to_text == TRUE) {
col_names <- colnames(data)
names_list <- names(aoe2dotnetapi::lobby_translation)
n_values <- length(names_list)
print(col_names)
for (i in 1:n_values) {
data <- merge(aoe2dotnetapi::lobby_translation[[i]], data, by.x ="id", by.y = names_list[i])
colnames(data)[colnames(data)=="string"] <- names_list[i]
data["id"] <- NULL
data <- data[,col_names]
}
col_names <- colnames(data$players[[1]])
print(col_names)
for (i in 1:nrow(data)) {
data$players[[i]] <- merge(aoe2dotnetapi::match_translation, data$players[[i]], by.x="id", by.y="civ")
colnames(data$players[[i]])[2] <- "civ"
data$players[[1]][,"id"] <- NULL
data$players[[1]] <- data$players[[1]][,col_names]
}
data
}
else {
data
}
}
aoe2_player_last_match <- function(player_id, game="aoe2de", id_to_text=T) {
id <- if (nchar(player_id)!=17) {
paste0("&profile_id=",player_id)
} else{
paste0("&steam_id=",player_id)
}
data <- jsonlite::fromJSON(
paste0("https://aoe2.net/api/player/lastmatch",
"?game=",game,
id)
)$last_match
data[sapply(data, is.null)] <- NA
match_data <- data.frame(matrix(unlist(data[1:40]), ncol=length(data[1:40]), byrow=T))
colnames(match_data) <- names(data[1:40])
match_data$players <- data[41]
data <- match_data
id_to_text1(data=data,id_to_text=id_to_text)
}
y <- aoe2_player_last_match("76561197984749679", id_to_text = F)
x <- aoe2_player_last_match("76561197984749679", id_to_text = T)
identical(y,y1)
identical(x,x1)
id_to_text <- function(data=data,id_to_text=T) {
if (id_to_text == TRUE) {
col_names <- colnames(data)
names_list <- names(aoe2dotnetapi::lobby_translation)
n_values <- length(names_list)
for (i in 1:n_values) {
data <- merge(aoe2dotnetapi::lobby_translation[[i]], data, by.x ="id", by.y = names_list[i])
colnames(data)[colnames(data)=="string"] <- names_list[i]
data["id"] <- NULL
data <- data[,col_names]
}
col_names <- colnames(data$players[[1]])
for (i in 1:nrow(data)) {
data$players[[i]] <- merge(aoe2dotnetapi::match_translation, data$players[[i]], by.x="id", by.y="civ")
colnames(data$players[[i]])[2] <- "civ"
data$players[[1]][,"id"] <- NULL
data$players[[1]] <- data$players[[1]][,col_names]
}
data
}
else {
data
}
}
aoe2_player_last_match <- function(player_id, game="aoe2de", id_to_text=T) {
id <- if (nchar(player_id)!=17) {
paste0("&profile_id=",player_id)
} else{
paste0("&steam_id=",player_id)
}
data <- jsonlite::fromJSON(
paste0("https://aoe2.net/api/player/lastmatch",
"?game=",game,
id)
)$last_match
data[sapply(data, is.null)] <- NA
match_data <- data.frame(matrix(unlist(data[1:40]), ncol=length(data[1:40]), byrow=T))
colnames(match_data) <- names(data[1:40])
match_data$players <- data[41]
data <- match_data
id_to_text(data=data,id_to_text=id_to_text)
}
y <- aoe2_player_last_match("76561197984749679", id_to_text = F)
x <- aoe2_player_last_match("76561197984749679", id_to_text = T)
identical(y,y1)
identical(x,x1)
rm(list=ls())
#' id_to_text
#'
#' This function translates the values to human readable. eg. map 1= arabia.
#'
#' More Information about aoe2.net api at https://aoe2.net/#api
#' @param data aoe2.net output
#' @param id_to_text Translates columns with number code to humanreadable text. Like civ ids to civ names.
#' @keywords id_to_text
id_to_text <- function(data=data, id_to_text=T) {
if (id_to_text == TRUE) {
col_names <- colnames(data)
names_list <- names(aoe2dotnetapi::lobby_translation)
n_values <- length(names_list)
for (i in 1:n_values) {
data <- merge(aoe2dotnetapi::lobby_translation[[i]], data, by.x ="id", by.y = names_list[i])
colnames(data)[colnames(data)=="string"] <- names_list[i]
data["id"] <- NULL
data <- data[,col_names]
}
col_names <- colnames(data$players[[1]])
for (i in 1:nrow(data)) {
data$players[[i]] <- merge(aoe2dotnetapi::match_translation, data$players[[i]], by.x="id", by.y="civ")
colnames(data$players[[i]])[2] <- "civ"
data$players[[1]][,"id"] <- NULL
data$players[[1]] <- data$players[[1]][,col_names]
}
data
}
else {
data
}
}
#' aoe2_player_last_match
#'
#' This function gives you data.frame of the player rating if the player has been active in the last 28 days.
#'
#' More Information about aoe2.net api at https://aoe2.net/#api
#' @param player_id Either profile_id or 64 bit steam id. Function takes either value and changes the api call accordingly
#' @param game Default is aoe2de since the api is mostly used for that.
#' @param id_to_text Translates columns with number code to humanreadable text. Like civ ids to civ names.
#' @keywords aoe2_player_rating
#' @export
#' @examples
#' #Last Match of GL. TheViper with profile_id
#' aoe2_player_last_match(player_id=196240)
#' #Last Match of GL. TheViper with steam_id
#' aoe2_player_last_match(player_id=76561197984749679)
aoe2_player_last_match <- function(player_id, game="aoe2de", id_to_text=T) {
id <- if (nchar(player_id)!=17) {
paste0("&profile_id=",player_id)
} else{
paste0("&steam_id=",player_id)
}
data <- jsonlite::fromJSON(
paste0("https://aoe2.net/api/player/lastmatch",
"?game=",game,
id)
)$last_match
data[sapply(data, is.null)] <- NA
match_data <- data.frame(matrix(unlist(data[1:40]), ncol=length(data[1:40]), byrow=T))
colnames(match_data) <- names(data[1:40])
match_data$players <- data[41]
data <- match_data
id_to_text(data=data,id_to_text=id_to_text)
}
y <- aoe2_player_last_match("76561197984749679", id_to_text = F)
x <- aoe2_player_last_match("76561197984749679", id_to_text = T)
View(x)
View(y)
